{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAUA,IAAIC,EAAO,EAEPC,EAAc,GACdC,EAAY,EACZC,EAAW,GAEfC,eAAeC,IACb,MAAMC,QAAiBC,EAAAC,QAAMC,IAC3B,qEAAiCR,uCAA0DD,4CAI7F,OAFAE,EAAYI,EAASI,KAAKC,UA4J1BX,GAAQ,EA1JDM,EAASI,KAAKE,I,CAKvB,MAAMC,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAYH,SAASC,cAAc,WACnCG,EAAQJ,SAASC,cAAc,wBAMrC,SAASI,EAAaC,GACL,OAAXA,EAAEV,OACJO,EAAUI,UAAW,E,CAKzB,SAASC,EAAYF,GAE8C,IAA7DA,EAAEG,cAAcC,SAASC,YAAYC,MAAMC,OAAOC,SACpDX,EAAUI,UAAW,E,CAdzBR,EAAWgB,iBAAiB,UAmD5BzB,eAAwBgB,GACtBA,EAAEU,iBAEF,MAAMC,EAAOX,EAAEG,cACTG,EAAQK,EAAKP,SAASC,YAAYC,MAAMC,OAC9C1B,EAAcyB,EAEdJ,EAAYF,GACZD,EAAaC,GAyFbpB,EAAO,EA3CPgB,EAAQgB,UAAY,SA3CdC,IAAcC,SAAQ,IAAMH,EAAKI,UA3CvClB,EAAUI,UAAW,C,IAlBvBR,EAAWgB,iBAAiB,QAASP,GACrCJ,EAAMW,iBAAiB,QAASV,GAsBhC,MAAMiB,EAAUtB,SAASC,cAAc,YAqBvC,SAASsB,IACPD,EAAQE,UAAUC,OAAO,O,CAoB3BnC,eAAe6B,IACb,IACE,MAAMO,QAAenC,IACfoC,QAAeD,EAAOE,QAC1B,CAACC,EAAQC,IAwCf,UAAsBC,cACpBA,EAAaC,aACbA,EAAYC,KACZA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,IAEA,MAAO,gBACIN,gDAECC,WAAsBC,8FAGdC,+DAGAC,kEAGGC,mEAGCC,uC,CAhEDC,CAAaR,GAASD,GACzC,IA4ByBA,EAzBLF,EA0BxBzB,EAAQqC,mBAAmB,YAAaV,GAoDxCxC,EAAW,IAAImD,EAAAxD,GAAJ,CAAmB,aAAc,CAC1CyD,aAAc,MACdC,aAAc,MA/EdrD,EAASsD,UAELvD,EAlGO,IAkGiBF,EAAO,GAAM,IACvC,EAAA0D,EAAAlD,WAGgB,IAAdN,GACFoD,EAAAK,GAASC,OAAOC,QACd,4EAEFxB,KACSnC,EAAY,GAAKF,EAAO,GAAM,GAwExB8D,EAvEH5D,EAwEhBoD,EAAAK,GAASC,OAAOG,QAAQ,oBAAoBD,aAvExCE,IACA3B,MAEA2B,IACA3B,I,CAEF,MAAO4B,GACP,OAAOC,QAAQC,MAAMF,E,CA+DzB,IAAqBH,EA3DUnB,C,CA+D/B,SAASqB,IACH9D,EAxLS,GAwLcF,EAAO,IAChCqC,IACAiB,EAAAK,GAASC,OAAOG,QACd,8D,CA5INK,OAAOvC,iBAAiB,UAExB,WACE,MAAMwC,UAAEA,EAASC,aAAEA,EAAYC,aAAEA,GAAiBzD,SAAS0D,gBAE3DN,QAAQO,IAAI,C,UAAEJ,E,aAAWC,E,aAAcC,IAEnCA,EAAeF,GAAaC,GAQhClC,EAAQE,UAAUoC,IAAI,QACtBC,WAAW1C,EAAa,MAPbqC,EAAeD,IAAcE,GACtCP,G","sources":["src/infiniteScroll.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport scrollBy from './scrollBy.js';\n\n// ======================================\n\nconst API_KEY = '33528220-6f12bec756615243821cbd5de';\nconst BASE_URL = 'https://pixabay.com/api';\nlet page = 1;\nlet per_page = 40;\nlet searchQuery = '';\nlet totalHits = 0;\nlet lightbox = '';\n\nasync function searchImage() {\n  const response = await axios.get(\n    `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&image_type=photo&per_page=${per_page}&page=${page}&orientation=horizontal&safesearch=true`\n  );\n  totalHits = response.data.totalHits;\n  nextPage();\n  return response.data.hits;\n}\n\n// =========================================\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst submitBtn = document.querySelector('.submit');\nconst input = document.querySelector('#search-form > input');\n\nsearchForm.addEventListener('submit', onSearch);\nsearchForm.addEventListener('input', onSabmitBtn);\ninput.addEventListener('input', invalidInput);\n\nfunction invalidInput(e) {\n  if (e.data === null) {\n    submitBtn.disabled = true;\n  }\n  return;\n}\n\nfunction onSabmitBtn(e) {\n  // console.log(e.currentTarget.elements.searchQuery.value);\n  if (e.currentTarget.elements.searchQuery.value.trim().length !== 0) {\n    submitBtn.disabled = false;\n  }\n}\n\nfunction ofSabmitBtn() {\n  submitBtn.disabled = true;\n}\n\n// =========================================================\n\nconst loading = document.querySelector('.loading');\n\nwindow.addEventListener('scroll', infiniteScroll);\n\nfunction infiniteScroll() {\n  const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n\n  console.log({ scrollTop, scrollHeight, clientHeight });\n\n  if (clientHeight + scrollTop >= scrollHeight) {\n    showLoading();\n  } else if (scrollHeight - scrollTop === clientHeight) {\n    galleryEndInfo();\n  }\n}\n\nfunction showLoading() {\n  loading.classList.add('show');\n  setTimeout(fetchImages, 500);\n}\n\nfunction showRemove() {\n  loading.classList.remove('show');\n}\n\n// =======================================================\n\nasync function onSearch(e) {\n  e.preventDefault();\n\n  const form = e.currentTarget;\n  const value = form.elements.searchQuery.value.trim();\n  searchQuery = value;\n\n  onSabmitBtn(e);\n  invalidInput(e);\n  resetPage();\n  clearGallery();\n  await fetchImages().finally(() => form.reset());\n  ofSabmitBtn();\n}\n\nasync function fetchImages() {\n  try {\n    const images = await searchImage();\n    const markup = await images.reduce(\n      (markup, image) => createMarkup(image) + markup,\n      ''\n    );\n\n    appendImagesToGallery(markup);\n    lightbox.refresh();\n\n    if (totalHits > per_page && page - 1 !== 1) {\n      scrollBy();\n    }\n\n    if (totalHits === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      showRemove();\n    } else if (totalHits > 0 && page - 1 === 1) {\n      totalImages(totalHits);\n      galleryEndInfo();\n      showRemove();\n    } else {\n      galleryEndInfo();\n      showRemove();\n    }\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nfunction appendImagesToGallery(markup) {\n  gallery.insertAdjacentHTML('beforeend', markup);\n  lightBox();\n}\n\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\n\n// ========================================================\n\nfunction createMarkup({\n  largeImageURL,\n  webformatURL,\n  tags,\n  likes,\n  views,\n  comments,\n  downloads,\n}) {\n  return `\n  <a href=\"${largeImageURL}\">\n  <div class=\"photo-card\">\n  <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes: </b>${likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views: </b>${views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments: </b>${comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads: </b>${downloads}\n    </p>\n  </div>\n</div></a>\n  `;\n}\n\n// ========================================================\n\nfunction nextPage() {\n  page += 1;\n}\n\nfunction resetPage() {\n  page = 1;\n}\n\nfunction lightBox() {\n  lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n}\n\nfunction totalImages(totalHits) {\n  Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n}\n\nfunction galleryEndInfo() {\n  if (totalHits / per_page < page - 1) {\n    showRemove();\n    Notiflix.Notify.success(\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n  }\n}\n"],"names":["$fZKcF","parcelRequire","$ad3db829490fd486$var$page","$ad3db829490fd486$var$searchQuery","$ad3db829490fd486$var$totalHits","$ad3db829490fd486$var$lightbox","async","$ad3db829490fd486$var$searchImage","response","$2shzp","default","get","data","totalHits","hits","$ad3db829490fd486$var$searchForm","document","querySelector","$ad3db829490fd486$var$gallery","$ad3db829490fd486$var$submitBtn","$ad3db829490fd486$var$input","$ad3db829490fd486$var$invalidInput","e","disabled","$ad3db829490fd486$var$onSabmitBtn","currentTarget","elements","searchQuery","value","trim","length","addEventListener","preventDefault","form","innerHTML","$ad3db829490fd486$var$fetchImages","finally","reset","$ad3db829490fd486$var$loading","$ad3db829490fd486$var$showRemove","classList","remove","images","markup1","reduce","markup","image","largeImageURL","webformatURL","tags","likes","views","comments","downloads","$ad3db829490fd486$var$createMarkup","insertAdjacentHTML","$parcel$interopDefault","captionsData","captionDelay","refresh","$9enWy","$7Y9D8","Notify","failure","totalHits1","success","$ad3db829490fd486$var$galleryEndInfo","err","console","error","window","scrollTop","scrollHeight","clientHeight","documentElement","log","add","setTimeout"],"version":3,"file":"infiniteScroll.66dc257b.js.map"}